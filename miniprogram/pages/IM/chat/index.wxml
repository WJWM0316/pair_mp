<chat-bubble mineUserInfo="{{mineUserInfo}}"></chat-bubble>

<view class="headerBox">
  <chat-header id="header" bindputUp="headerPutUp" bindchangeBlackStatus="changeBlackStatus" mineUserInfo="{{mineUserInfo}}" othersUserInfo="{{othersUserInfo}}" chatDetail="{{chatDetail}}"></chat-header>
</view>

<view class="chatWrap"  bindtap="resetView">
  <view class="systemHint" wx:if="{{showSystemHint}}">TA特别想认识你，缘分来了就不要错过哟~</view>
  <debutWord bindselectResult="selectResult" wx:if="{{showDebutWord}}" type="debutWord" bindtapMpre="bindtapMpre" vkey="{{othersUserInfo.vkey}}" ></debutWord>
  <view class="chatArea">
    <view class="scrollView">
      <view class="message-list">
        <view class="message-box" wx:for="{{messageList}}" wx:key="id" wx:if="{{item}}"  id="msg{{index}}">
          <view class="time" wx:if="{{!index || (index > 0 && item.imData.timestamp - messageList[index - 1].imData.timestamp > 1000 * 60)}}">{{filters.activeTime(item.imData.timestamp)}}</view>
          <view  wx:if="{{item.msgType === 'RC:RcCmd'}}" class="customMsg">{{item.imFromUser.vkey === options.vkey ? '对方撤回了一条消息' : '你撤回了一条消息'}}</view>
          <view  wx:else class="message-item {{item.imFromUser.vkey === options.vkey ? 'others' : 'mine'}}">
            <view class="avatar">
              <i-image src="{{item.imFromUser.vkey === options.vkey ? othersUserInfo.avatarInfo.smallUrl : mineUserInfo.avatarInfo.smallUrl}}"></i-image>
            </view>
            <view 
              class="message-content {{parse.setMsgType(item.msgType)}} msgCon{{index}}" 
              catchlongpress="longpress" 
              data-object="{{item}}" 
              data-class="msgCon{{index}}"
              data-index="{{index}}"
              >
              <block wx:if="{{item.msgType === 'RC:TxtMsg'}}">
              <view class="text"><rich-text nodes="{{filters.setEmoji(item.imData.content.content, cdnPath)}}" space="emsp"></rich-text></view>
              </block>
              <block wx:if="{{item.msgType === 'RC:ImgMsg'}}">
                <msg-image message="{{item.imData.content}}"></msg-image>
              </block>
              <block wx:if="{{item.msgType === 'RC:VcMsg'}}">
                <msg-audio own="{{item.imFromUser.vkey !== options.vkey}}" message="{{item.imData.content}}"></msg-audio>
              </block>
              <view 
                class="longpress"
                style="{{longpressData.style}}"
                wx:if="{{longpressData.index === index}}"
                >
                <i class="icon" style="{{longpressData.iconStyle}}"></i>
                <text class="textBtn" data-msgdata="{{item}}" data-type="copy" catchtap = "action" wx:if="{{item.msgType === 'RC:TxtMsg'}}">复制</text>
                <text class="textBtn" data-msgdata="{{item}}" data-type="withdraw" catchtap = "action" data-index="{{index}}" wx:if="{{curTimestamp - item.imData.timestamp <= 2 * 60 * 1000}}">撤回</text>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="systemHint black" wx:if="{{chatDetail.blackInfo.beBlacked || chatDetail.blackInfo.blacked}}">{{chatDetail.blackInfo.beBlacked ? '你已被对方拉黑，无法发送消息' : '对方已你被拉黑，无法发送消息'}}</view>
  <view id="bottomBlock" style="height:1rpx"></view>
   <view class="noviceGuide" catchtouchmove wx:if="{{showNoviceGuide}}" bindtap="closeNoviceGuide">
    <i-image my-class="guideImg" src="{{cdnPath}}img_guide_im_inf.png"></i-image>
  </view>
  <chat-footer 
    id="footer" 
    selectIndex="{{selectIndex}}" 
    bindselectType="selectType" 
    bindsendMsg="sendMsg"
    chatDetail="{{chatDetail}}"
    vkey="{{othersUserInfo.vkey}}" 
    mineUserInfo="{{mineUserInfo}}"
  ></chat-footer>
</view>
<wxs src="../../../utils/filters.wxs" module="filters" />

<wxs module="parse">
  module.exports = {
    hidden: function (type, selectIndex) {
      switch (type) {
        case 'console-area':
          return [null, 1, 2].indexOf(selectIndex) !== -1
          break
        case 'record':
          return [null, 1, 2, 3, 4].indexOf(selectIndex) !== -1
          break
        case 'emoji':
          return [null, 0, 1, 2, 4].indexOf(selectIndex) !== -1
          break
        case 'debutWord':
          return [null, 0, 1, 2, 3].indexOf(selectIndex)  !== -1
          break
      }
    },
    setStyle : function(type, textHeight, selectIndex){
      var consoleHeight = [0, 3, 4].indexOf(selectIndex) !== -1 ? 400 : 0
      switch (type) {
        case 'chatArea':
          return 'height: calc(148rpx + ' + textHeight + 'px + ' + consoleHeight + 'rpx)';
          break
        case 'textarea':
          return 'height:' + textHeight + 'px;';
          break
      }
    },
    setMsgType : function( type ){
      switch (type) {
        case 'RC:TxtMsg':
          return 'text'
          break
        case 'RC:ImgMsg':
          return 'img'
          break
      }
    }
  }
</wxs>
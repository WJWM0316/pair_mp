.tabBar {
  width: 100%;
  position: fixed;
  left: 0;
  bottom: 0;
  z-index: 8;
  padding-bottom: 30rpx;
}
@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
  .tabBar {
    padding-bottom: calc(constant(safe-area-inset-bottom) + 30rpx);
    padding-bottom: calc(env(safe-area-inset-bottom) + 30rpx);
  }
}
.tabBar .tabBar-content {
  width: 686rpx;
  height: 118rpx;
  background: #fff;
  box-shadow: 0rpx 12rpx 30rpx 0rpx rgba(30, 102, 102, 0.1);
  border-radius: 60rpx;
  margin: 0 auto;
  padding: 0 116rpx;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  z-index: 2;
}
.tabBar .tabBar-content .tabBar-item {
  text-align: center;
  position: relative;
}
.tabBar .tabBar-content .tabBar-item .icon {
  display: block;
  width: 54rpx;
  height: 54rpx;
}
.tabBar .tabBar-content .tabBar-item .text {
  display: block;
  color: #C7D7E7;
  font-size: 22rpx;
  line-height: 30rpx;
  font-weight: 700;
  margin-top: 6rpx;
}
.tabBar .tabBar-content .tabBar-item .text.selected {
  color: #0CCDDA;
}
.tabBar .tabBar-content .tabBar-item.center {
  position: absolute;
  left: 50%;
  width: 125rpx;
  margin-left: -67.5rpx;
  top: -16rpx;
}
.tabBar .tabBar-content .tabBar-item.center .icon {
  width: 125rpx;
  height: 108rpx;
}
.tabBar .tabBar-content .tabBar-item.center .text {
  margin-top: -16rpx;
}
.tabBar .tabBar-content .tabBar-item.center .text.selected {
  color: #F46BA1;
}
.tabBar .tabBar-content .tabBar-item .unread {
  padding: 0 10rpx;
  background: #F46BA1;
  border-radius: 19rpx;
  border: 2rpx solid #fff;
  position: absolute;
  top: -6rpx;
  left: 36rpx;
  font-size: 24rpx;
  color: #fff;
  line-height: 34rpx;
}
.tabBar .tabBar-mask {
  width: 100%;
  height: 88rpx;
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 1;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, #ffffff 100%);
}
.block {
  width: 100%;
  display: block;
  padding-bottom: 178rpx;
}
@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
  .block {
    padding-bottom: calc(constant(safe-area-inset-bottom) + 178rpx);
    padding-bottom: calc(env(safe-area-inset-bottom) + 178rpx);
  }
}

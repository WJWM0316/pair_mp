var IMAGES = './images/'
/**
 * 时间戳转化格式
 */
var dateFormat = function(timestamp, format) {
  var date = getDate(timestamp * 1000)
  var year = date.getFullYear()
  var month = date.getMonth() + 1
  var day = date.getDate()
  if (month < 10) month = '0' + month
  if (day < 10) day = '0' + day
  var hour = function() {
    if(date.getHours() < 10) {
      return '0' + date.getHours()
    }
    return date.getHours()
  }

  var minute = function() {
    if(date.getMinutes() < 10) {
      return '0' + date.getMinutes()
    }
    return date.getMinutes()
  }

  var second = function() {
    if(date.getSeconds() < 10) {
      return '0' + date.getSeconds()
    }
    return date.getSeconds()
  }
  switch(format) {
    case 'HH:mm':
    return hour() + ':' + minute()
    case 'HH:mm:ss':
    return hour() + ':' + minute() + ':' + second()
    case 'MM-DD HH:mm':
    return month + '-' + day + ' ' + hour() + ':' + minute()
    case 'YY-MM-DD':
    return year + '-' + month + '-' + day
    case 'YY-MM-DD HH:mm':
    return year + '-' + month + '-' + day + ' ' + hour() + ':' + minute()
    case 'MM-DD':
    return month + '-' + day
    case 'YY.MM':
    return year + '.' + month
    case 'YM':
    return year+'年'+month+'月'
  }
}

/**
 * 时间戳转化活跃时间
 */
var activeTime = function(timestamp) {
  var releaseTime = timestamp
  var releaseDate = getDate(releaseTime)
  var now = getDate()
  var timeStr = ''
  if (releaseTime) {
    var differ = parseInt((now.getTime() - releaseTime) / 1000)
    var timeCompany = {
      m: 60,
      h: 60 * 60,
      d: 60 * 60 * 24
    }
    // 是否跨年 and 超过两天
    var nowDate = {
      y: now.getFullYear(),
      m: now.getMonth(),
      d: now.getDate()
    }
    var releaseTimeDate = {
      y: releaseDate.getFullYear(),
      m: releaseDate.getMonth(),
      d: releaseDate.getDate()
    }
    // 是否当天
    if (nowDate.y === releaseTimeDate.y && nowDate.m === releaseTimeDate.m && nowDate.d === releaseTimeDate.d) {
      timeStr = dateFormat(releaseTime / 1000, 'HH:mm')
    } else {
      // 跨年
      if (nowDate.y > releaseTimeDate.y) {
        timeStr = dateFormat(releaseTime / 1000, 'YY-MM-DD  HH:mm')
      } else {
        // 超过两天
        if (nowDate.d - releaseTimeDate.d > 2) {
          timeStr = dateFormat(releaseTime / 1000, 'MM-DD HH:mm')
        } else if (nowDate.d - releaseTimeDate.d === 2) { // 两天
          timeStr = '前天 ' + dateFormat(releaseTime / 1000, 'HH:mm')
        } else if (nowDate.d - releaseTimeDate.d === 1) { // 一天
          timeStr = '昨天 ' + dateFormat(releaseTime / 1000, 'HH:mm')
        }
      }
    }
  }
  return timeStr
}


var positionFilter = function(num) {
  var status = null
  switch(num) {
    case 0:
      status = '已关闭'
      break
    case 1:
      status = '已关闭'
      break
    case 2:
      // 先发后审
      status = '审核中'
      break
    case 3:
      // 审核不通过，再次编辑提审状态
      status = '审核中'
      break
    case 4:
      status = '审核失败'
      break
    default:
      break
  }
  return status
}

// 手机格式转化
var mobileFormat = function(mobile, type) {
  var mobile = mobile
  if (type === 'blank') {
    mobile = mobile.slice(0, 3) + ' ' + mobile.slice(3, 7) + ' ' + mobile.slice(7, 11)
  } else {
    mobile = mobile.slice(0, 3) + '*****' + mobile.slice(8, 11)
  }
  return mobile
}

// 加密身份证
var encryptId = function(str, frontLen, endLen) {
  var len = str.length - frontLen - endLen;
  var xing = '';
  for (var i = 0; i < len; i++) {
    xing += '*';
  }
  return str.substring(0, frontLen) + xing + str.substring(str.length - endLen);
}

// 设置表情
var setEmoji = function (data, path) {
  var emojiName = ["[微笑]", "[撇嘴]", "[色]", "[发呆]", "[得意]", "[流泪]", "[害羞]", "[闭嘴]", "[睡]", "[大哭]", "[尴尬]", "[发怒]", "[调皮]", "[呲牙]", "[惊讶]", "[难过]", "[酷]", "[冷汗]", "[抓狂]", "[吐]", "[偷笑]", "[可爱]", "[白眼]", "[傲慢]", "[饥饿]", "[困]", "[惊恐]", "[流汗]", "[憨笑]", "[大兵]", "[奋斗]", "[咒骂]", "[疑问]", "[嘘]", "[晕]", "[折磨]", "[衰]", "[骷髅]", "[敲打]", "[再见]", "[擦汗]", "[抠鼻]", "[鼓掌]", "[糗大了]", "[坏笑]", "[左哼哼]", "[右哼哼]", "[哈欠]", "[鄙视]", "[委屈]", "[快哭了]", "[阴险]", "[亲亲]", "[吓]", "[可怜]", "[菜刀]", "[西瓜]", "[啤酒]", "[篮球]", "[乒乓]", "[咖啡]", "[饭]", "[猪头]", "[玫瑰]", "[凋谢]", "[示爱]", "[爱心]", "[心碎]", "[蛋糕]", "[闪电]", "[炸弹]", "[刀]", "[足球]", "[瓢虫]", "[便便]", "[月亮]", "[太阳]", "[礼物]", "[拥抱]", "[强]", "[弱]", "[握手]", "[胜利]", "[抱拳]", "[勾引]", "[拳头]", "[差劲]", "[爱你]", "[NO]", "[OK]", "[爱情]", "[飞吻]", "[跳跳]", "[发抖]", "[怄火]", "[转圈]", "[磕头]", "[回头]", "[跳绳]", "[挥手]", "[激动]", "[街舞]", "[献吻]", "[左太极]", "[右太极]", "[双喜]", "[鞭炮]", "[灯笼]", "[发财]", "[K歌]", "[购物]", "[邮件]", "[帅]", "[喝彩]", "[祈祷]", "[爆筋]", "[棒棒糖]", "[喝奶]", "[下面]", "[香蕉]", "[飞机]", "[开车]", "[左车头]", "[车厢]", "[右车头]", "[多云]", "[下雨]", "[钞票]", "[熊猫]", "[灯泡]", "[风车]", "[闹钟]", "[打伞]", "[彩球]", "[钻戒]", "[沙发]", "[纸巾]", "[药]", "[手枪]", "[青蛙]"]
  var emojiList = ["ee_024", "ee_041", "ee_020", "ee_044", "ee_022", "ee_010", "ee_021", "ee_105", "ee_036", "ee_011", "ee_026", "ee_025", "ee_002", "ee_001", "ee_034", "ee_033", "ee_013", "ee_028", "ee_014", "ee_023", "ee_004", "ee_019", "ee_031", "ee_032", "ee_080", "ee_081", "ee_027", "ee_003", "ee_038", "ee_051", "ee_043", "ee_082", "ee_035", "ee_012", "ee_050", "ee_014", "ee_040", "ee_077", "ee_006", "ee_005", "ee_007", "ee_084", "ee_085", "ee_086", "ee_047", "ee_087", "ee_045", "ee_088", "ee_049", "ee_015", "ee_089", "ee_042", "ee_037", "ee_090", "ee_052", "ee_018", "ee_061", "ee_062", "ee_091", "ee_092", "ee_067", "ee_059", "ee_008", "ee_009", "ee_061", "ee_030", "ee_029", "ee_073", "ee_060", "ee_079", "ee_017", "ee_069", "ee_076", "ee_063", "ee_016", "ee_068", "ee_074", "ee_075", "ee_046", "ee_053", "ee_054", "ee_055", "ee_056", "ee_057", "ee_064", "ee_072", "ee_071", "ee_066", "ee_093", "ee_065", "ee_039", "ee_048", "ee_094", "ee_070", "ee_095", "ee_096", "ee_097", "ee_098", "ee_099", "ee_078", "ee_100", "ee_101", "ee_102", "ee_103", "ee_104", "ee_107", "ee_108", "ee_109", "ee_110", "ee_111", "ee_112", "ee_113", "ee_114", "ee_115", "ee_116", "ee_117", "ee_118", "ee_119", "ee_120", "ee_121", "ee_112", "ee_123", "ee_124", "ee_125", "ee_126", "ee_127", "ee_128", "ee_129", "ee_130", "ee_131", "ee_132", "ee_133", "ee_134", "ee_135", "ee_136", "ee_137", "ee_138", "ee_139", "ee_140", "ee_141"]
  var regexp  = getRegExp('\[.+?\]', 'g')
  var getEmoji = data.match(regexp)
  if (getEmoji) {
    for (i = 0; i <= getEmoji.length - 1; i++) {
      var img = "<img class=emoji style=vertical-align:middle;width:30px src=" + path + emojiList[emojiName.indexOf(getEmoji[i])] + ".png />" // 将获取到的表情符号转成img
      data = data.replace(getEmoji[i], img)
    }
  }
  return data
}

module.exports = {
  dateFormat: dateFormat,
  activeTime: activeTime,
  mobileFormat: mobileFormat,
  positionFilter: positionFilter,
  encryptId: encryptId,
  setEmoji: setEmoji
}
